@page "/customerinfo"
@using Customer_Information;
@using Serilog
@rendermode InteractiveServer
@attribute [StreamRendering]
<PageTitle>Customer</PageTitle>

<h1>Customer</h1>
<p>Customer Data</p>

<div class="container">
	 <div class="row">

		<div class="col-md">
			<h3 >Search</h3>
		</div>
		<div class="col-md">
			<select class="btn btn-outline-primary shadow-lg" @onchange="OnAttributeSelected" >
				<option value="">-- Select an Attribute --</option>
				@foreach (var str in Queries.ValidSearchAttributes)
				{
					<option value="@str"> @str </option>
				}
			</select>
		</div>

		<div class="col-md">
			<select class="btn btn-outline-primary shadow-lg"  @onchange="OnValueSelected">
				<option  value="">-- Select Value --</option>
				@foreach (var value in DistinctValues)
				{
					<option value="@value"> @value </option>
				}
			</select>
		</div>
		<div class=" col-md">
			<button class="btn btn-outline-primary" @onclick="ReloadData">Reload Data </button>
		</div>
	</div>
</div>

@if (customers == null)
{
	<p><em>Loading...</em></p>
}
else
{
	<table class="table">
		<thead>
			<tr>
				<th>Customer ID</th>
				<th>Customer Name </th>
				<th>Customer City </th>
				<th>Customer Country </th>
				<th>Customer Company </th>
				<th>Customer Phone </th>
				<th>Customer Email </th>
			</tr>
		</thead>
		<tbody>
			@foreach (var customer in customers)
			{
				<tr>
					<td>@customer.CustomerID </td>
					<td>@customer.CustomerName </td>
					<td>@customer.CustomerCity </td>
					<td>@customer.CustomerCountry </td>
					<td>@customer.CustomerCompany </td>
					<td>@customer.CustomerPhone </td>
					<td>@customer.CustomerEmail </td>
				</tr>
			}
		</tbody>
	</table>
}

@code{
	List<Customer> customers = CustomerRepository.ReadData();
	List<String> DistinctValues =new (){
	"Select Attribute"
	};
	string SelectedAttribute = string.Empty;
	string SelectedAttributevalue = string.Empty;

	private void OnAttributeSelected(ChangeEventArgs e)
	{
#nullable disable
		SelectedAttribute = e.Value.ToString();

		if (SelectedAttribute!=null)
			DistinctValues = Queries.getDistinctValues(customers,SelectedAttribute);
	}
	private void OnValueSelected(ChangeEventArgs e)
	{
		SelectedAttributevalue = e.Value.ToString();

		if (SelectedAttributevalue!=null)
			customers = Queries.Find(customers, SelectedAttribute, SelectedAttributevalue);
	}
	private void ReloadData()
	{
		customers = CustomerRepository.ReadData();

	}
}
