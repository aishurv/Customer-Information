@page "/sortDesc"
@using Customer_Information;
@using Serilog
@rendermode InteractiveServer
@attribute [StreamRendering]
<PageTitle>Customer</PageTitle>


<h1>Customer Information System </h1>
<h3> Sort Customer Data In Descending Order </h3>
<button class="btn btn-danger shadow-lg" @onclick="ReloadData">Reload Data </button>

<select class="btn btn-outline-primary shadow-lg" @onchange="OnSortAttributeSelected">
    <option value="">-- Select an Attribute --</option>
    @foreach (var str in Queries.ValidSortAttributes)
    {
        <option value="@str"> @str </option>
    }
</select>

@if (customers == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Customer ID</th>
                <th>Customer Name </th>
                <th>Customer City </th>
                <th>Customer Country </th>
                <th>Customer Company </th>
                <th>Customer Phone </th>
                <th>Customer Email </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var customer in customers)
            {
                <tr>
                    <td>@customer.CustomerID </td>
                    <td>@customer.CustomerName </td>
                    <td>@customer.CustomerCity </td>
                    <td>@customer.CustomerCountry </td>
                    <td>@customer.CustomerCompany </td>
                    <td>@customer.CustomerPhone </td>
                    <td>@customer.CustomerEmail </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    List<Customer> customers = CustomerRepository.GetCustomerData();
    string SelectedSortAttribute = string.Empty;

    private void OnSortAttributeSelected(ChangeEventArgs e)
    {
        bool order = false;
        SelectedSortAttribute = e.Value?.ToString() ?? Queries.ValidSortAttributes[0]!;
        customers = Queries.SortCustomers(customers, SelectedSortAttribute, order);
    }
    private void ReloadData()
    {
        customers = CustomerRepository.GetCustomerData();

    }
}
