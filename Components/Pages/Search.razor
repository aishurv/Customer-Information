@page "/Search"

@using Customer_Information;
@using Serilog
@rendermode InteractiveServer
@attribute [StreamRendering]
<PageTitle>Search Customer</PageTitle>

<h1>Customer Information System </h1>
<p> Search Customer Data</p>
<div class="container">
	 <div class="row">
        <div class="col ">
            <div class="row d-flex justify-content-center align-items-center ">
                <h3>Search Customer Data </h3>
            </div>
            <div class="row">
                <div class="col">

                    <select class="btn btn-outline-primary shadow-lg" @onchange="OnSearchAttributeSelected">
                        <option value="">-- Select an Attribute --</option>
                        @foreach (var str in Queries.ValidSearchAttributes)
                        {
                            <option value="@str"> @str </option>
                        }
                    </select>
                </div>

                <div class="col">
                    <select class="btn btn-outline-primary shadow-lg" @onchange="OnValueSelected">
                        <option value="">-- Select Value --</option>
                        @foreach (var value in DistinctValues)
                        {
                            <option value="@value"> @value </option>
                        }
                    </select>
                </div>
            </div>
        </div>

        <div class="col d-flex justify-content-center align-items-center ">
            <button class="btn btn-danger" @onclick="ReloadData">Reload Data </button>
        </div>
    </div>
</div>
@if (customers == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Customer ID</th>
                <th>Customer Name </th>
                <th>Customer City </th>
                <th>Customer Country </th>
                <th>Customer Company </th>
                <th>Customer Phone </th>
                <th>Customer Email </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var customer in customers)
            {
                <tr>
                    <td>@customer.CustomerID </td>
                    <td>@customer.CustomerName </td>
                    <td>@customer.CustomerCity </td>
                    <td>@customer.CustomerCountry </td>
                    <td>@customer.CustomerCompany </td>
                    <td>@customer.CustomerPhone </td>
                    <td>@customer.CustomerEmail </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    List<Customer> customers = CustomerRepository.GetCustomerData();
    List<String> DistinctValues = new(){
    "Select Attribute"
    };
    string SelectedSearchAttribute = string.Empty;
    string SelectedAttributevalue = string.Empty;
    private void OnSearchAttributeSelected(ChangeEventArgs e)
    {
        SelectedSearchAttribute = e.Value?.ToString() ?? Queries.ValidSearchAttributes[0]!;

        if (SelectedSearchAttribute != null)
            DistinctValues = Queries.getDistinctValues(customers, SelectedSearchAttribute);
    }
    private void OnValueSelected(ChangeEventArgs e)
    {
        SelectedAttributevalue = e.Value?.ToString() ?? DistinctValues[0]!;

        if (SelectedAttributevalue != null)
            customers = Queries.Find(customers, SelectedSearchAttribute, SelectedAttributevalue);
    }
    private void ReloadData()
    {
        customers = CustomerRepository.GetCustomerData();

    }
}
